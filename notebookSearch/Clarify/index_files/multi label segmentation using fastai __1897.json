{"name": "multi label segmentation using fastai ", "full_name": " h1 Multi label segmentation using fastai h2 Code utils h2 EDA h3 Broken images h3 Convert masks from to RLE h2 Load images h2 Train h3 Unfreeze and differential learning rate h2 Predictions h3 Get predictions for test images h3 Resize predictions to submission size h3 Write submission file ", "stargazers_count": 0, "forks_count": 0, "description": " Multi label segmentation using fastai It is gravel or sugar Part of this project is to find out if humans even agree on these cloud patterns Different persons will label clouds differently the same area can be seen has gravel by one person and sugar by another one Consequently there is overlap in the labels i e each pixel can belong to several classes Fastai https docs fast ai integrates convenient features for data augmentation and training which should be useful later So it would be nice to use it in this project However multi label segmentation isn t supported yet For now I focused on adding multi label support to fastai segmentation To achieve this the MultiLabelSegmentationLabelList and MultiLabelImageSegment classes have been created Each RLE encoded mask is loaded into a separate image segment channel This way overlapping label information is preserved A simple Unet with ResNet18 model is trained to verify that everything works correctly The test images are loaded in the databunch test dataset and utilized at the end of this notebook to make predictions and write submission file This is only a start but I hope that this will be helpful to others Code utils EDA Broken images Images which look incorrect Convert masks from to RLE From evaluation https www kaggle com c understanding cloud organization overview evaluation start position and a run length E g 1 3 implies starting at pixel 1 and running a total of 3 pixels 1 2 3 The pixels are numbered from top to bottom then left to right 1 is pixel 1 1 2 is pixel 2 1 etc Load images Train Unfreeze and differential learning rate Predictions Get predictions for test images Resize predictions to submission size As per competition rules predicted masks must have 1 4 of original size for submission Write submission file  Python 3 environment defined by the kaggle python docker image https github com kaggle docker python linear algebra data processing CSV file I O e g pd read csv split Image Label pivot to have one row per image and masks as columns sanity check Train and test images are 1400x2100 pixels TODO remove use partial data use only a subset of data to speedup tests put all masks into a single channel shape CxHxW slice tensor to a single mask channel use powers of two for class codes to keep them distinguishable after sum use same color normalization in image and legend custom legend see https matplotlib org 3 1 1 gallery text labels and annotations custom legends html debug info ax text 10 10 f px self px size color white source https forums fast ai t unet how to get 4 channel output 54674 4 adapted from https forums fast ai t how to load multiple classes of rle strings from csv severstal steel competition 51445 2 add attributes to copy by new load mask at full resolution shape CxHxW filter out NaNs binarize masks get filename only reduce image size img size tuple v 16 for v in train img dims use multiple of 4 no need for a void class if a pixel isn t in any mask it is not labelled add unlabelled test images set empty RLE string as label to produce empty multi label masks and allow reconstruct and show TODO add data augmentation tfms get transforms use same stats as pretrained model adapted from https www kaggle com iafoss unet34 dice 0 87 can use sigmoid on the input too in this case the threshold would be 0 5 make sure target is float too update a graph of learner stats and metrics after each epoch save model at every metric improvement stop training if metric no longer improve point to writable directory learn learn load Path learn model dir 20190924 095959 unet resnet18 stage1 best slice start end syntax the first group s learning rate is start the last is end and the remaining are evenly geometrically spaced TODO use activation instead ", "id": "alt250/multi-label-segmentation-using-fastai", "size": "1897", "language": "python", "html_url": "https://www.kaggle.com/code/alt250/multi-label-segmentation-using-fastai", "git_url": "https://www.kaggle.com/code/alt250/multi-label-segmentation-using-fastai"}