{"name": "covid 19 detection pytorch tutorial ", "full_name": " h1 Hyperdrive into PyTorch Tutorial Dive into Computer Vision in Health Care h3 Why AI in Health Care is crucial h2 PyTorch h3 Why learn PyTorch h2 Let s get started h1 COVID 19 Detection using Chest Xray h2 Transforms h2 Train and Validation Data Split h2 Model Definition h3 Training h4 Early Stopping h2 Model Evaluation h2 Inference ", "stargazers_count": 0, "forks_count": 0, "description": " Star Wars Ep IV New Hope https i stack imgur com jmKDh jpg Hyperdrive into PyTorch Tutorial Dive into Computer Vision in Health Care Yeah as you guessed I am a huge fan of Star Wars Maybe I learn Artificial Intelligence and Deep Learning to build my own C 3PO like the young Anakin Skywalker did but I would build a Bot for Health Care to help Humans in saving the Humanity As it is the need of the time in this dreadful pandemic Ok lets consider building an Bot like see in Star Wars ability to process what it sees will be our first priority right Else our C 3PO will be blind Computer Vision is a field of artificial intelligence that enables machines the ability to See things The word See is not what you think of it as just what a camera do capturing moments But thats not it See means that machine can able to perceive things and understands the difference or relation between the real world physical entities This state of See is we achieved now takes a lot of hard word research and iterations We achieved it by solving little pieces of it like Image Classification Image Segmentation and Object Segmentation etc We are so blessed to be born in this period as we have a plethora of resesources and community of people to guide us through Why AI in Health Care is crucial Though many fields can be benificial by the implementation of Artificial Intelligence it is the field of Health Care which would be benifitted the most and in turn Humanity It very hard to diagnose X ray scans and take decisions deterministically at the right momemt There is also human errors associated with it Computers can contribute a ton to Health and Medicine as an SideKick to humans Doctors I wouldn t say Computer can outperform with absolute percision it may have fail in some cases That s why we have computers to assist Doctors Pneumoia Detection https i imgur com jZqpV51 png font color red If you find this notebook helpful please do upvote this notebook It would make me smile and motivate me font Since you already starting reading Kaggle Notebooks I assume you may have come across this Deep Learning library that is familiar with most Data Scientists and AI Researchers img src https www quintagroup com blog blog images machine learning libraries pytorch png images cce95fa7 4048 42c1 b768 dca2a747b8bd png width 300 alt PyTorch PyTorch PyTorch is a Deep Learning library which makes Tensor Computations a core part in Deep Learning applications It is developed and used by Facebook AI Research Lab It has been library which attracted many researchers and develop many State of the Art Algorithms across all the fields of Deep Learning such as Computer Vision NLP and Tabular Data Processing Why learn PyTorch PyTorch is home for many powerful projects and future researches in Deep Learning and Artificial Intelligence FaceBook AI Research FAIR contributed an enormous amount of new mind boggling researches and projects built o PyTorch Detectron2 CV HugginngFace NLP DETR CV are some of amazing projects by them based on PyTorch So you will be able to see and develop your own State of the Art applications inspiring from these projects And also PyTorch is so friendly looking with most of the code will look like vanila Python Structures I learnt PyTorch after I got comfortable with Tensorflow Keras I think PyTorch has more flexibility for a coder and Customizable I get to know the process behind the Traning of Model better with PyTorch Let s get started Ok I can hear you say ENOUGH Alright let s get started in this notebook I am gonna guide you through a image classification task using PyTorch So the problem statement that I am gonna take will be COVID 19 Detection using Chest Xray As you probably know we are in the tight hold of a pandemic which has its disastarous effect on this world We are standing together even while physically distancing ourselves protecting others and caring for others in this dreadful times Humanity still deserved to live for million years But we should contribute our role in this fight against an invisible enemy Many Data Scientist are working getting predictions and developing models for strategies We can assist HealthCare workers and Doctors by developing a AI Assistment or Model A Image Classification model can handle a lot of worries for Doctors especially in X Ray Diagnosis In this notebook I am going to train a CNN classifier which can classify COVID 19 Infected Lung Xray images from Healthy Lung Xray images For that we need dataset from both classes I used the dataset from two sources Cohen s COVID Chest X ray Dataset https github com ieee8023 covid chestxray dataset Paul Mooney s Chest X ray Dataset Pneumonia https www kaggle com paultimothymooney chest xray pneumonia I am very grateful and thankful to the huge efforts by the Open Source Community for collecting data in a repository This project would be possible without those repositories I create the aggregate the images from those two repositories and get them ready for training Check out the code I have taken correct propositions of data from each classes while staging my data to avoid overfitted results Medical Image Datasets will always be like this we don t have enough data on victim rather we have so many healthy ones That is what we called is a Skewed Dataset obviously we developed methods to approach those problems like K Fold Cross Validation that will explain that in my next notebook Lets view some images to know what we are dealing with here Feel free the run the cell to view images at random from the repository Have you seen how similar they look Yeah right sometimes even for a medical expert It is hard to diagnose with Xray images That s why we can help them with our model Transforms Data Transforms or Augmentation is the synthesis of new data using the available with some little manipulations and image processing Augmentation will help generalizing our model avoids Over fitting to the training data Since we have relatively little amounts of data for training and validation we will synthesis some extra data through Image Transforms strong torchvision strong from PyTorch provides various tools that we can use to perform various tasks for Computer Vision with ease of use Few most used tools include transforms https pytorch org docs stable torchvision transforms html Image Data Augementation datasets https pytorch org docs stable torchvision datasets html Dataset loading and handling models https pytorch org docs stable torchvision models html Deep Learning Pre Defined SOTA Models These tools will be so handy for us so that we can concentrate on optimizing our results better Train and Validation Data Split We split our dataset into train and validation sets for training and validating our model with seperate datasets Like I said datasets ImageFolder takes the images from each folder named after the class name and automatically labels them Then data DataLoader loads those labelled images and tracks of the Train Data Image and Label Class Name Those are the X and Y value which we take for training Ofcourse we don t want to sit for hours to see our model training That s why we have GPU with us now we are going to play game using GPU but this game is The Imitation Game PyTorch has device object to load the data into the either of two hardware CPU or CUDA GPU Model Definition We reached the fun part We use DenseNet 121 Architecture as the core here for our DL Model We also use pre trained weights as a means to Transfer Learning To learn and achieve higher accuracy on our model faster Transfer Learning is a powerful technique that we use in Deep Learning which is we use the model parameters which are already trained on a larger dataset ie ImageNet Dataset consist of 1000 Classes For instance its process of transfering the Knowledge of a learnt man into another Pretrained model will already trained to extract micro features like curves and lines We will have the previous knowledge to initalize with and we can train the model to look for what it should look DenseNet 121 https miro medium com max 1400 1 vIZhPImFr9Gjpx6ZB7IOJg png You can learn more about Densenets here in this paper https arxiv org abs 1608 06993 Here I am traning all the the Layers instead of freezing CNN Layers and training only the Fully Connected Layer Classification Layer like most people do in Classification Task Since we are handling Medical Images here we have to train the CNN layers completely or Partially Since we haven t froze the CNN layer parameters untrainable we are going to train a huge number of parameters Training Welcome to PyTorch here you are free to write your codes as you like with flexibility and comfortability So shall we start writing our training code We are not using any wrapper class like Keras for Tensorflow PyTorchLightning for PyTorch we are going to write the training code ourselves from scratch We won t regret mastering writing the Trainer code for pytorch it would help you a ton with theoretical understanding with lavishness model train and model eval are called respectively on Training and Evaluation phase Intialise Loss and Accuracy Variable of the epochs to zero Passing an dataloader object to a interative function we get Image Data and Label in batches for every loop Transfer the Data and label to GPU if available If it s Training Phase we find Gradients and perform Back Progation for that we write the code under torch set grad enabled to instruct the PyTorch to consider the parameters for Backpropagation updation Feed in the Data X to the model and it will output outputs Y Calculate the loss using label and outputs using criterion nn CrossEntropyLoss With the loss we can now find the gradients and perform Backprogation using loss backward and optimizer optim Adam with defined LR optim lr scheduler StepLR will update the LR based on the parameters defined Find the epoch accuracy and epoch loss for both training and validation phase Additionally we find validation kappa score Kappa score is a trusted metric for evaluating Medical AI Models You can learn more about here https towardsdatascience com interpretation of kappa values 2acd1ca7b18f Note Important step while training in PyTorch is optimizer zero grad because PyTorch haves caches of gradients in the memory we have to zero that out while each step Early Stopping Early Stopping is a method of choosing the best performed model with given conditions Generally the conditions would be Best Validation Accuracy or Lowest Validation Loss For this model I choose the model with lowest validation loss for better reliable results from the model Because more medical model is gonna diagnose a person we dont want a false positive or false negative To do that we will check for lowest validation loss at every epoch and save the model parameters weights into a object and finally load the weights to the model using model load state dict Let s define a function which would give image visualisations along with the predicted label to see if the model is really outputing relevant answers I am have run with setting of 10 Epochs due to Kaggle feel free to tweak up the no of epochs to get even better model Model Evaluation That s it we have trained our model with great accuracy and minimum validation loss that means it should do well with the images it haven t seen So we test the model with images it haven t seen before This process is called Model Evaluation I use a dataset collected and published in Kaggle by Tawsifur Rahman COVID 19 Radiography Database https www kaggle com tawsifurrahman covid19 radiography database I take 100 Images from each class for testing from his repository Inference Now that you trained and tested your model you gotta a very good model on your hand Now we can take this to production with inference code An inference code is the one which is used to predict a single input image so that it can be integrated into an web app or smartphone application Usually the inferences are done in CPU because of the hardware constraints in deployment Young Anakin Tinkering with C 3PO https qph fs quoracdn net main qimg 4247d864f62ecdb071c8f259d15947af webp We have created the eye of our own C 3PO for Health Care Next thing is develop ability to sense sentiment through listening Would like to learn how to do that Please check out my notebook on Sentiment Classification using LSTM https www kaggle com arunrk7 nlp beginner text classification using lstm Hurrah Let s celebrate our victory over creating a AI which can help us diagnose CoronaVirus Patients But I would never claim this model to diagnose actual Patients just yet Since we have trained this model on a very small data We can never make assumptions or claim the model is the new Baseline Performer and it is ready to deploy for diagnosis in real world Unless you are a Medical Expert and get the Medical Council of your country approve this You are not allowed to proclaim your model as potential diagnosis tool I wrote this notebook to give a glimpse over the Image Classification using Deep Learning in PyTorch I hope you have learnt something from this notebook Best wishes on your future journey of Creating AI I would love to suggest you some resources to learn more about this incredible field deeplearning ai s courses on Convolutional Neural Network https www coursera org learn convolutional neural networks and AI on Medicine https www deeplearning ai ai for medicine PyTorch Tutorials https pytorch org tutorials some of them are very intriguing MLMED Chester Xray Diagnosis Assistant on Github https github com mlmed dl web xray font color yellow May the force be with all of us Survive this pandemic we will font font size 5 color red If you find this notebook helpful please do strong UPVOTE strong It would cheer me up and write more font  Plotting Distribution of Each Classes Statistics Based on ImageNet Data for Normalisation Resizes all images into same dimension Rotates the images upto Max of 10 Degrees Performs Horizantal Flip over images Coverts into Tensors Normalizes Performs Crop at Center and resizes it to 150x150 Picks up Image Paths from its respective folders and label them Sampler for splitting train and val images DataLoader provides data from traininng and validation in batches pause a bit so that plots are updated Get a batch of training data Make a grid from batch Returns Defined Densenet model with weights trained on ImageNet Get the number of features output from CNN layer Overwrites the Classifier layer with custom defined layer for transfer learning Transfer the Model to GPU if available specify loss function categorical cross entropy loss Specify optimizer which performs Gradient Descent Decay LR by a factor of 0 1 every 7 epochs Learning Scheduler Each epoch has a training and validation phase Set model to training mode Set model to evaluate mode We need to zero the gradients in the Cache Time to carry out the forward training poss We only need to log the loss stats if we are in training phase backward optimize only if in training phase We want variables to hold the loss statistics EARLY STOPPING Now we ll load in the best model weights and return it Loading the model pre trained weights from saved file Inference function print input shape Sample Image Path ", "id": "arunrk7/covid-19-detection-pytorch-tutorial", "size": "14399", "language": "python", "html_url": "https://www.kaggle.com/code/arunrk7/covid-19-detection-pytorch-tutorial", "git_url": "https://www.kaggle.com/code/arunrk7/covid-19-detection-pytorch-tutorial"}