{"name": "hpa cellwise classification inference ", "full_name": " h1 Human Protein Atlas Single Cell Classification h2 Categorical Classification At a Cellular Level INFERENCE h2 TABLE OF CONTENTS h3 0 xa0 xa0 xa0 xa0IMPORTS h3 1 xa0 xa0 xa0 xa0BACKGROUND INFORMATION h3 2 xa0 xa0 xa0 xa0SETUP h3 3 xa0 xa0 xa0 xa0HELPER FUNCTIONS h3 4 xa0 xa0 xa0 xa0INFERENCE LOOP h3 5 xa0 xa0 xa0 xa0VISUALIZATION h3 1 1 APPROACH OVERVIEW h3 1 2 VISUAL HELPER h3 4 1 LOAD THE MODEL h3 4 2 INFER ", "stargazers_count": 0, "forks_count": 0, "description": " h1 style text align center font family Verdana font size 32px font style normal font weight bold text decoration none text transform none font variant small caps letter spacing 3px color 74d5dd background color ffffff Human Protein Atlas Single Cell Classification h1 h2 style text align center font family Verdana font size 24px font style normal font weight bold text decoration underline text transform none letter spacing 2px color navy background color ffffff Categorical Classification At a Cellular Level INFERENCE h2 h5 style text align center font family Verdana font size 12px font style normal font weight bold text decoration None text transform none letter spacing 1px color black background color ffffff CREATED BY DARIEN SCHETTLER h5 h2 style font family Verdana font size 24px font style normal font weight bold text decoration none text transform none letter spacing 3px color navy background color ffffff TABLE OF CONTENTS h2 h3 style text indent 10vw font family Verdana font size 20px font style normal font weight normal text decoration none text transform none letter spacing 2px color navy background color ffffff a href imports 0 nbsp nbsp nbsp nbsp IMPORTS a h3 h3 style text indent 10vw font family Verdana font size 20px font style normal font weight normal text decoration none text transform none letter spacing 2px color navy background color ffffff a href background information 1 nbsp nbsp nbsp nbsp BACKGROUND INFORMATION a h3 h3 style text indent 10vw font family Verdana font size 20px font style normal font weight normal text decoration none text transform none letter spacing 2px color navy background color ffffff a href setup 2 nbsp nbsp nbsp nbsp SETUP a h3 h3 style text indent 10vw font family Verdana font size 20px font style normal font weight normal text decoration none text transform none letter spacing 2px color navy background color ffffff a href helper functions 3 nbsp nbsp nbsp nbsp HELPER FUNCTIONS a h3 h3 style text indent 10vw font family Verdana font size 20px font style normal font weight normal text decoration none text transform none letter spacing 2px color navy background color ffffff a href inference 4 nbsp nbsp nbsp nbsp INFERENCE LOOP a h3 h3 style text indent 10vw font family Verdana font size 20px font style normal font weight normal text decoration none text transform none letter spacing 2px color navy background color ffffff a href viz 5 nbsp nbsp nbsp nbsp VISUALIZATION a h3 a style text align font family Verdana font size 24px font style normal font weight bold text decoration none text transform none letter spacing 3px background color ffffff color navy id imports 0 nbsp nbsp IMPORTS a a style text align font family Verdana font size 24px font style normal font weight bold text decoration none text transform none letter spacing 3px color navy background color ffffff id background information 1 nbsp nbsp BACKGROUND INFORMATION a h3 style text align font family Verdana font size 20px font style normal font weight normal text decoration none text transform none letter spacing 2px color navy background color ffffff 1 1 APPROACH OVERVIEW h3 TRAINING 1 Identify slide level images containing only one label 2 Segment slide level images get RLEs for all cells in all applicable slide level images 3 Crop RGBY image around each cell 4 Pad each RGBY tile to be square 5 Resize each RGBY tile to be 256px by 256px 6 TBD Filter the images based on certain additional factors to obtain a better training dataset 7 Seperate the channels and store as seperate datasets 8 Augment the dataset rotation flipping horizontal and vertical minor skew 9 Train a model to classify these tile level images accurately INFERENCE 1 Use CellSegmentator to do instance segmentation on images in test dataset 2 Record this mask in the appropriate format for later submission 3 Crop RGBY image around each cell 4 Pad each RGBY tile to be square 5 Resize each RGBY tile to be 256px by 256px 6 Infer on each slide 7 Combine cell level classification with segmentation as RLE when submitting h3 style text align font family Verdana font size 20px font style normal font weight normal text decoration none text transform none letter spacing 2px color navy background color ffffff 1 2 VISUAL HELPER h3 basic idea graph https i ibb co y6YfBzN basic idea png a style font family Verdana font size 24px font style normal font weight bold text decoration none text transform none letter spacing 3px color navy background color ffffff id setup 2 nbsp nbsp NOTEBOOK SETUP a a style text align font family Verdana font size 24px font style normal font weight bold text decoration none text transform none letter spacing 3px color navy background color ffffff id helper functions 3 nbsp nbsp HELPER FUNCTIONS a a style text align font family Verdana font size 24px font style normal font weight bold text decoration none text transform none letter spacing 3px color navy background color ffffff id inference 4 nbsp nbsp INFERENCE LOOP a h3 style text align font family Verdana font size 20px font style normal font weight normal text decoration none text transform none letter spacing 2px color navy background color ffffff 4 1 LOAD THE MODEL h3 Load the models Define the parameters Make subset dataframes Initialize h3 style text align font family Verdana font size 20px font style normal font weight normal text decoration none text transform none letter spacing 2px color navy background color ffffff 4 2 INFER h3 a style text align font family Verdana font size 24px font style normal font weight bold text decoration none text transform none letter spacing 3px color navy background color ffffff id submit 5 nbsp nbsp SUBMIT a  Cell Segmentator Tool Machine Learning and Data Science Imports Built In Imports Visualization Imports Submission Imports PRESETS Stop Tensorflow From Eating All The Memory Currently memory growth needs to be the same across GPUs Memory growth must be set before GPUs have been initialized Define paths to nucleus and cell models for the cellsegmentator class Define the path to the competition data directory Define the paths to the training and testing tfrecord and image folders respectively for the competition data Capture all the relevant full image paths for the competition dataset Define paths to the relevant csv files Create the relevant dataframe objects Test Time Augmentation Information helps us control whether this is the full submission or just the initial pass If demo submission display we only do a subset of the data check input mask convert input mask to expected COCO API input RLE encode mask compress and base64 encoding convert the compressed string to a 3D uint8 tensor resize the image to the desired size This is for cellsegmentator Get batch of images 0 000001 seconds Do segmentation post processing pad height pad width if the length the contours tuple returned by cv2 findContours is 2 then we are using either OpenCV v2 4 v4 beta or v4 official if the length of the contours tuple is 3 then we are using either OpenCV v3 v4 pre or v4 alpha otherwise OpenCV has changed their cv2 findContours return signature yet again and I have no idea WTH is going on return the actual contours array Initialize We can only display one color so we pick the first Border and fill Text create new image batch tf automatically deep copies Load inference model Parameters Switch what we will be actually infering on Make subset dataframes Load Segmentator Make subset dataframes 0 t 1 03042 seconds 1 t 8 14935 seconds 2 t 0 00002 seconds 3 t 29 9057 seconds 4 t 1 30675 seconds 5 t 0 01442 seconds 6 t 0 26723 seconds 7 t 4 10871 seconds 8 t 0 00108 seconds 9 t 0 00066 seconds 10 t 0 00015 seconds Step 0 Get batch of images as numpy arrays Step 1 Get Bounding Boxes Step 2 Get RGB Images which are actually just labelled as RGBY Step 3 Get Submission RLEs Optional Step Get the Masks Step 1 Do Prediction On Batch Step 2 Perform Cell Labelling on Batch Step 3 Reshape the RGBY Images so They Are Channels Last Across the Batch Step 4 Get Bounding Boxes For All Cells in All Images in Batch Step 5 Generate Submission RLEs For the Batch Step 6 Cut Out Pad to Square and Resize to 224x224 Step 7 OPTIONAL Test Time Augmentation Step 8 Perform Inference Step 9 Post Process Optional Viz Step Step 10 Format Predictions To Create Prediction String Easily Step 11 Save Predictions to Be Added to Dataframe At The End ", "id": "dschettler8845/hpa-cellwise-classification-inference", "size": "6386", "language": "python", "html_url": "https://www.kaggle.com/code/dschettler8845/hpa-cellwise-classification-inference", "git_url": "https://www.kaggle.com/code/dschettler8845/hpa-cellwise-classification-inference"}